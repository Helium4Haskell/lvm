{- import/export -}
module Abstract( main, sum, fromTo ) where

abstract foldl  = Export.foldl  :: (a -> b -> a) -> a -> List b -> a
abstract add    = Export.addint :: Int -> Int -> Int
abstract fromTo = Export.fromTo :: Int -> Int -> List Int
abstract Cons   = Export.Cons :: a -> List a -> List a = 1

main  = sum  (Cons 1 (fromTo 2 100))

sum   = foldl add 0