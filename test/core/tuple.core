{- tuple test -}
module Tuple where

instruction primAdd "addint" :: Int! -> Int! -> Int!

add x y
  = let! x = x 
         y = y
    in primAdd x y

fst x = case x of
          (a,b)   -> a
          (a,b,c) -> a

snd x = case x of
          (@1,2) a b  -> b
          (@1,3) a b c -> b

main  = add (fst (1,2)) (snd ((@1,3) 1 41 3))